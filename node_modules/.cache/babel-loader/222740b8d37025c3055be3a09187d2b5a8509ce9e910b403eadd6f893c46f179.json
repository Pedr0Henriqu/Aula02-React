{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport api from \"../api\"; // importando a instância do Axios de \"api.js\"\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Musicas() {\n  _s();\n  const [listaMusicas, setListaMusicas] = useState([]); // criando estado de vetor para uma lista de músicas\n\n  useEffect(() => {\n    api.get().then(res => {\n      console.log(res.data);\n      setListaMusicas(res.data);\n      console.log(\"essa e a lista de musicas\", listaMusicas);\n    }).catch(erro => {\n      console.log(erro);\n    });\n  }, []);\n\n  // function listar() {\n  //     console.log(\"Requisição está sendo feita: \");\n\n  //     api.get()                               // invocando o método \"get\" do axios utilizando a URL base instanciada em \"api.js\"\n  //     .then((resposta) => {       // método get responde uma Promise que será resolvida, e quando obtiver uma resposta, cairá no \"then\" recebendo a resposta como parâmetro\n  //         console.log(resposta.data);   // exibindo o atributo \"data\", que possui o vetor de dados do objeto de resposta que foi recebido\n  //         setListaMusicas(resposta.data);    // utilizando o setter para alterar o valor do estado (useState) de \"musicas\"\n  //     })\n  //     .catch((errorOcorrido) => {             // caso a requisição falhe, o \"catch\" pegará o erro, recebendo como parâmetro de uma função\n  //         console.log(errorOcorrido)          // exibindo o erro que ocorreu na requisição\n  //     });\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Musicas, \"aAb4wmPF0ZvNg+6SJ1q16wT8h80=\");\n_c = Musicas;\nexport default Musicas;\nvar _c;\n$RefreshReg$(_c, \"Musicas\");","map":{"version":3,"names":["useEffect","useState","api","Fragment","_Fragment","jsxDEV","_jsxDEV","Musicas","_s","listaMusicas","setListaMusicas","get","then","res","console","log","data","catch","erro","_c","$RefreshReg$"],"sources":["/home/aluno/Downloads/music-box-3-a/src/pages/Musicas.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport api from \"../api\"; // importando a instância do Axios de \"api.js\"\n\nfunction Musicas() {\n  const [listaMusicas, setListaMusicas] = useState([]); // criando estado de vetor para uma lista de músicas\n\n  useEffect(() => {\n    api\n      .get()\n      .then((res) => {\n        console.log(res.data);\n        setListaMusicas(res.data);\n        console.log(\"essa e a lista de musicas\", listaMusicas);\n      })\n      .catch((erro) => {\n        console.log(erro);\n      });\n  }, []);\n\n  // function listar() {\n  //     console.log(\"Requisição está sendo feita: \");\n\n  //     api.get()                               // invocando o método \"get\" do axios utilizando a URL base instanciada em \"api.js\"\n  //     .then((resposta) => {       // método get responde uma Promise que será resolvida, e quando obtiver uma resposta, cairá no \"then\" recebendo a resposta como parâmetro\n  //         console.log(resposta.data);   // exibindo o atributo \"data\", que possui o vetor de dados do objeto de resposta que foi recebido\n  //         setListaMusicas(resposta.data);    // utilizando o setter para alterar o valor do estado (useState) de \"musicas\"\n  //     })\n  //     .catch((errorOcorrido) => {             // caso a requisição falhe, o \"catch\" pegará o erro, recebendo como parâmetro de uma função\n  //         console.log(errorOcorrido)          // exibindo o erro que ocorreu na requisição\n  //     });\n  // }\n\n  return (\n    <>\n      \n    </>\n  );\n}\n\nexport default Musicas;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,GAAG,MAAM,QAAQ,CAAC,CAAC;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtDD,SAAS,CAAC,MAAM;IACdE,GAAG,CACAS,GAAG,EAAE,CACLC,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;MACrBN,eAAe,CAACG,GAAG,CAACG,IAAI,CAAC;MACzBF,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEN,YAAY,CAAC;IACxD,CAAC,CAAC,CACDQ,KAAK,CAAEC,IAAI,IAAK;MACfJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEZ,OAAA,CAAAF,SAAA,oBAEG;AAEP;AAACI,EAAA,CAlCQD,OAAO;AAAAY,EAAA,GAAPZ,OAAO;AAoChB,eAAeA,OAAO;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}